{"version":3,"file":"index.js","sources":["../src/util.js","../node_modules/uuid/dist/esm-node/rng.js","../node_modules/uuid/dist/esm-node/regex.js","../node_modules/uuid/dist/esm-node/validate.js","../node_modules/uuid/dist/esm-node/stringify.js","../node_modules/uuid/dist/esm-node/v4.js","../src/reducers.js","../src/index.js"],"sourcesContent":["import { useStorageReducer } from 'react-storage-hooks'\r\n\r\nexport const isClient = typeof window === 'object'\r\n\r\nexport const formatCurrencyString = ({\r\n  value,\r\n  currency,\r\n  language = isClient ? navigator.language : 'en-US'\r\n}) => {\r\n  value = parseInt(value)\r\n  const numberFormat = new Intl.NumberFormat(language, {\r\n    style: 'currency',\r\n    currency,\r\n    currencyDisplay: 'symbol'\r\n  })\r\n  const parts = numberFormat.formatToParts(value)\r\n  let zeroDecimalCurrency = true\r\n\r\n  for (const part of parts) {\r\n    if (part.type === 'decimal') {\r\n      zeroDecimalCurrency = false\r\n      break\r\n    }\r\n  }\r\n\r\n  value = zeroDecimalCurrency ? value : value / 100\r\n  return numberFormat.format(value.toFixed(2))\r\n}\r\n\r\nexport function useLocalStorageReducer(key, reducer, initialState) {\r\n  const dummyStorage = {\r\n    getItem() {\r\n      return null\r\n    },\r\n    setItem() {},\r\n    removeItem() {}\r\n  }\r\n  return useStorageReducer(\r\n    isClient ? window.localStorage : dummyStorage,\r\n    key,\r\n    reducer,\r\n    initialState\r\n  )\r\n}\r\n\r\nexport const getCheckoutData = {\r\n  stripe(cart) {\r\n    const lineItems = []\r\n    for (const sku in cart.cartDetails)\r\n      lineItems.push({ price: sku, quantity: cart.cartDetails[sku].quantity })\r\n\r\n    const options = {\r\n      mode: 'payment',\r\n      lineItems,\r\n      successUrl: cart.successUrl,\r\n      cancelUrl: cart.cancelUrl,\r\n      billingAddressCollection: cart.billingAddressCollection\r\n        ? 'required'\r\n        : 'auto',\r\n      submitType: 'auto'\r\n    }\r\n\r\n    if (cart.allowedCountries?.length) {\r\n      options.shippingAddressCollection = {\r\n        allowedCountries: cart.allowedCountries\r\n      }\r\n    }\r\n\r\n    return options\r\n  }\r\n}\r\n\r\nexport function checkoutHandler(cart, checkoutOptions) {\r\n  let serviceProperty = ''\r\n  if (cart.stripe) serviceProperty = 'stripe'\r\n\r\n  const needsCheckoutData = cart.mode === 'client-only'\r\n\r\n  return async function (parameters) {\r\n    if (!serviceProperty) {\r\n      throw new Error(\r\n        'No compatible API has been defined, your options are: Stripe'\r\n      )\r\n    }\r\n\r\n    if (!checkoutOptions.modes.includes(cart.mode)) {\r\n      throw new Error(\r\n        `Invalid checkout mode '${\r\n          cart.mode\r\n        }' was chosen. The valid modes are ${new Intl.ListFormat().format(\r\n          checkoutOptions.modes\r\n        )}.`\r\n      )\r\n    }\r\n\r\n    let options = { sessionId: parameters?.sessionId }\r\n    if (needsCheckoutData) options = getCheckoutData.stripe(cart)\r\n\r\n    const { error } = await checkoutOptions[serviceProperty](\r\n      await cart[serviceProperty],\r\n      options,\r\n      parameters\r\n    )\r\n    if (error) return error\r\n  }\r\n}\r\n\r\nexport async function filterCart(cartDetails, filter) {\r\n  const filteredCart = {}\r\n\r\n  for (const sku in cartDetails) {\r\n    const entry = cartDetails[sku]\r\n    if (await filter(entry)) filteredCart[sku] = entry\r\n  }\r\n\r\n  return filteredCart\r\n}\r\n","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { formatCurrencyString } from './util'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nexport const cartInitialState = {\r\n  lastClicked: '',\r\n  shouldDisplayCart: false,\r\n  stripe: null\r\n}\r\nexport function cartReducer(cart, action) {\r\n  switch (action.type) {\r\n    case 'store-last-clicked':\r\n      return {\r\n        ...cart,\r\n        lastClicked: action.id\r\n      }\r\n\r\n    case 'cart-click':\r\n      return {\r\n        ...cart,\r\n        shouldDisplayCart: !cart.shouldDisplayCart\r\n      }\r\n\r\n    case 'cart-hover':\r\n      return {\r\n        ...cart,\r\n        shouldDisplayCart: true\r\n      }\r\n\r\n    case 'close-cart':\r\n      return {\r\n        ...cart,\r\n        shouldDisplayCart: false\r\n      }\r\n\r\n    case 'stripe-changed':\r\n      return {\r\n        ...cart,\r\n        stripe: action.stripe\r\n      }\r\n\r\n    default:\r\n      return cart\r\n  }\r\n}\r\n\r\nexport const cartValuesInitialState = {\r\n  cartDetails: {},\r\n  totalPrice: 0,\r\n  cartCount: 0\r\n}\r\n\r\nfunction Entry(\r\n  product,\r\n  quantity,\r\n  currency,\r\n  language,\r\n  price_metadata,\r\n  product_metadata\r\n) {\r\n  const id =\r\n    product.id || product.price_id || product.sku_id || product.sku || uuidv4()\r\n\r\n  if (!product.price_data && price_metadata) {\r\n    product.price_data = {\r\n      ...price_metadata\r\n    }\r\n  } else if (product.price_data && price_metadata) {\r\n    product.price_data = {\r\n      ...product.price_data,\r\n      ...price_metadata\r\n    }\r\n  }\r\n\r\n  if (!product.product_data && product_metadata) {\r\n    product.product_data = {\r\n      ...product_metadata\r\n    }\r\n  } else if (product.product_data && product_metadata) {\r\n    product.product_data = {\r\n      ...product.product_data,\r\n      ...product_metadata\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...product,\r\n    id,\r\n    quantity,\r\n    get value() {\r\n      return this.price * this.quantity\r\n    },\r\n    get formattedValue() {\r\n      return formatCurrencyString({\r\n        value: this.value,\r\n        currency,\r\n        language\r\n      })\r\n    }\r\n  }\r\n}\r\nexport function cartValuesReducer(state, action) {\r\n  function createEntry(product, count, price_metadata, product_metadata) {\r\n    const entry = Entry(\r\n      product,\r\n      count,\r\n      action.currency,\r\n      action.language,\r\n      price_metadata,\r\n      product_metadata\r\n    )\r\n\r\n    return {\r\n      cartDetails: {\r\n        ...state.cartDetails,\r\n        [entry.id]: entry\r\n      },\r\n      totalPrice: state.totalPrice + product.price * count,\r\n      cartCount: state.cartCount + count\r\n    }\r\n  }\r\n\r\n  function updateEntry(sku, count, price_metadata, product_metadata) {\r\n    const cartDetails = { ...state.cartDetails }\r\n    const entry = cartDetails[sku]\r\n    if (entry.quantity + count <= 0) return removeEntry(sku)\r\n\r\n    if (!entry.price_data && price_metadata) {\r\n      entry.price_data = {\r\n        ...price_metadata\r\n      }\r\n    } else if (entry.price_data && price_metadata) {\r\n      entry.price_data = {\r\n        ...entry.price_data,\r\n        ...price_metadata\r\n      }\r\n    }\r\n\r\n    if (!entry.product_data && product_metadata) {\r\n      entry.product_data = {\r\n        ...product_metadata\r\n      }\r\n    } else if (entry.product_data && product_metadata) {\r\n      entry.product_data = {\r\n        ...entry.product_data,\r\n        ...product_metadata\r\n      }\r\n    }\r\n\r\n    cartDetails[sku] = Entry(\r\n      entry,\r\n      entry.quantity + count,\r\n      action.currency,\r\n      action.language,\r\n      price_metadata,\r\n      product_metadata\r\n    )\r\n\r\n    return {\r\n      cartDetails,\r\n      totalPrice: state.totalPrice + entry.price * count,\r\n      cartCount: state.cartCount + count\r\n    }\r\n  }\r\n\r\n  function removeEntry(sku) {\r\n    const cartDetails = { ...state.cartDetails }\r\n    const totalPrice = state.totalPrice - cartDetails[sku].value\r\n    const cartCount = state.cartCount - cartDetails[sku].quantity\r\n    delete cartDetails[sku]\r\n\r\n    return { cartDetails, totalPrice, cartCount }\r\n  }\r\n\r\n  function updateQuantity(sku, quantity) {\r\n    const entry = state.cartDetails[sku]\r\n    return updateEntry(sku, quantity - entry.quantity)\r\n  }\r\n\r\n  switch (action.type) {\r\n    case 'add-item-to-cart':\r\n      if (action.count <= 0) break\r\n      if (action.product.id in state.cartDetails)\r\n        return updateEntry(\r\n          action.product.id,\r\n          action.count,\r\n          action.price_metadata,\r\n          action.product_metadata\r\n        )\r\n      return createEntry(\r\n        action.product,\r\n        action.count,\r\n        action.price_metadata,\r\n        action.product_metadata\r\n      )\r\n\r\n    case 'increment-item':\r\n      if (action.count <= 0) break\r\n      if (action.id in state.cartDetails)\r\n        return updateEntry(action.id, action.count)\r\n      break\r\n\r\n    case 'decrement-item':\r\n      if (action.count <= 0) break\r\n      if (action.id in state.cartDetails)\r\n        return updateEntry(action.id, -action.count)\r\n      break\r\n\r\n    case 'set-item-quantity':\r\n      if (action.count < 0) break\r\n      if (action.id in state.cartDetails)\r\n        return updateQuantity(action.id, action.quantity)\r\n      break\r\n\r\n    case 'remove-item-from-cart':\r\n      if (action.id in state.cartDetails) return removeEntry(action.id)\r\n      break\r\n\r\n    case 'clear-cart':\r\n      return cartValuesInitialState\r\n\r\n    case 'load-cart':\r\n      if (!action.shouldMerge) state = { ...cartValuesInitialState }\r\n\r\n      for (const sku in action.cartDetails) {\r\n        const entry = action.cartDetails[sku]\r\n        if (action.filter && !action.filter(entry)) continue\r\n\r\n        state = createEntry(entry, entry.quantity)\r\n      }\r\n      return state\r\n\r\n    default:\r\n      return state\r\n  }\r\n\r\n  console.warn('Invalid action arguments', action)\r\n  return state\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useDebugValue,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer\r\n} from 'react'\r\n\r\nimport {\r\n  checkoutHandler,\r\n  formatCurrencyString,\r\n  isClient,\r\n  useLocalStorageReducer\r\n} from './util'\r\nimport {\r\n  cartInitialState,\r\n  cartReducer,\r\n  cartValuesInitialState,\r\n  cartValuesReducer\r\n} from './reducers'\r\n\r\nexport { formatCurrencyString, isClient } from './util'\r\n\r\nexport const CartContext = createContext([\r\n  {\r\n    lastClicked: '',\r\n    shouldDisplayCart: false,\r\n    ...cartValuesInitialState\r\n  },\r\n  () => {}\r\n])\r\n\r\nexport function CartProvider({\r\n  children,\r\n  mode,\r\n  stripe,\r\n  successUrl,\r\n  cancelUrl,\r\n  currency,\r\n  language = isClient ? navigator.language : 'en-US',\r\n  billingAddressCollection = false,\r\n  allowedCountries = null\r\n}) {\r\n  const [cart, cartDispatch] = useReducer(cartReducer, cartInitialState)\r\n\r\n  useEffect(() => {\r\n    cartDispatch({ type: 'stripe-changed', stripe })\r\n  }, [stripe])\r\n\r\n  const [cartValues, cartValuesDispatch] = useLocalStorageReducer(\r\n    'cart-values',\r\n    cartValuesReducer,\r\n    cartValuesInitialState\r\n  )\r\n\r\n  // combine dispatches and\r\n  // memoize context value to avoid causing re-renders\r\n  const contextValue = useMemo(\r\n    () => [\r\n      {\r\n        ...cart,\r\n        ...cartValues,\r\n        mode,\r\n        successUrl,\r\n        cancelUrl,\r\n        currency,\r\n        language,\r\n        billingAddressCollection,\r\n        allowedCountries\r\n      },\r\n      (action) => {\r\n        cartDispatch(action)\r\n        cartValuesDispatch({ ...action, currency, language })\r\n      }\r\n    ],\r\n    [\r\n      cart,\r\n      cartDispatch,\r\n      cartValues,\r\n      cartValuesDispatch,\r\n      mode,\r\n      successUrl,\r\n      cancelUrl,\r\n      currency,\r\n      language,\r\n      billingAddressCollection,\r\n      allowedCountries\r\n    ]\r\n  )\r\n\r\n  return (\r\n    <CartContext.Provider value={contextValue}>{children}</CartContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useShoppingCart = () => {\r\n  const [cart, dispatch] = useContext(CartContext)\r\n\r\n  const {\r\n    lastClicked,\r\n    shouldDisplayCart,\r\n    cartCount,\r\n    cartDetails,\r\n    totalPrice,\r\n    currency,\r\n    language\r\n  } = cart\r\n\r\n  const addItem = (product, count = 1, price_metadata, product_metadata) => {\r\n    dispatch({\r\n      type: 'add-item-to-cart',\r\n      product,\r\n      count,\r\n      price_metadata,\r\n      product_metadata\r\n    })\r\n  }\r\n\r\n  const removeItem = (id) => dispatch({ type: 'remove-item-from-cart', id })\r\n  const setItemQuantity = (id, quantity) =>\r\n    dispatch({ type: 'set-item-quantity', id, quantity })\r\n  const incrementItem = (id, count = 1) =>\r\n    dispatch({ type: 'increment-item', id, count })\r\n  const decrementItem = (id, count = 1) =>\r\n    dispatch({ type: 'decrement-item', id, count })\r\n  const clearCart = () => dispatch({ type: 'clear-cart' })\r\n\r\n  const storeLastClicked = (id) => dispatch({ type: 'store-last-clicked', id })\r\n  const handleCartClick = () => dispatch({ type: 'cart-click' })\r\n  const handleCartHover = () => dispatch({ type: 'cart-hover' })\r\n  const handleCloseCart = () => dispatch({ type: 'close-cart' })\r\n\r\n  const loadCart = (cartDetails, shouldMerge = true) =>\r\n    dispatch({ type: 'load-cart', cartDetails, shouldMerge })\r\n\r\n  const redirectToCheckout = checkoutHandler(cart, {\r\n    modes: ['client-only', 'checkout-session'],\r\n    stripe(stripe, options) {\r\n      return stripe.redirectToCheckout(options)\r\n    }\r\n  })\r\n\r\n  const checkoutSingleItem = checkoutHandler(cart, {\r\n    modes: ['client-only'],\r\n    stripe(stripe, options, { sku, quantity = 1 }) {\r\n      options.lineItems = [{ price: sku, quantity }]\r\n      return stripe.redirectToCheckout(options)\r\n    }\r\n  })\r\n\r\n  const shoppingCart = {\r\n    cartDetails,\r\n    cartCount,\r\n    totalPrice,\r\n    get formattedTotalPrice() {\r\n      return formatCurrencyString({\r\n        value: totalPrice,\r\n        currency,\r\n        language\r\n      })\r\n    },\r\n\r\n    addItem,\r\n    removeItem,\r\n    setItemQuantity,\r\n    incrementItem,\r\n    decrementItem,\r\n    clearCart,\r\n    lastClicked,\r\n    storeLastClicked,\r\n    shouldDisplayCart,\r\n    handleCartClick,\r\n    handleCartHover,\r\n    handleCloseCart,\r\n    redirectToCheckout,\r\n    checkoutSingleItem,\r\n    loadCart\r\n  }\r\n  useDebugValue(shoppingCart)\r\n  return shoppingCart\r\n}\r\n\r\nexport function DebugCart(props) {\r\n  const cart = useShoppingCart()\r\n  const cartPropertyRows = Object.entries(cart)\r\n    .filter(([, value]) => typeof value !== 'function')\r\n    .map(([key, value]) => (\r\n      <tr key={key}>\r\n        <td>{key}</td>\r\n        <td>\r\n          {typeof value === 'object' ? (\r\n            <button onClick={() => console.log(value)}>Log value</button>\r\n          ) : (\r\n            JSON.stringify(value)\r\n          )}\r\n        </td>\r\n      </tr>\r\n    ))\r\n\r\n  return (\r\n    <table\r\n      style={{\r\n        position: 'fixed',\r\n        top: 50,\r\n        right: 50,\r\n        backgroundColor: '#eee',\r\n        textAlign: 'left',\r\n        maxWidth: 500,\r\n        padding: 20,\r\n        borderSpacing: '25px 5px'\r\n      }}\r\n      {...props}\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th>Key</th>\r\n          <th>Value</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{cartPropertyRows}</tbody>\r\n    </table>\r\n  )\r\n}\r\n"],"names":["crypto"],"mappings":"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}